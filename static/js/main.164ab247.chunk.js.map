{"version":3,"sources":["logo.svg","components/card-list/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","monsters","map","SearchBox","type","placeholder","onChange","onChangeEvent","App","handleOnChange","event","setState","searchField","target","value","state","fetch","then","elements","json","this","filteredMonster","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iTAAe,I,kBCIFA,EAAO,SAAAC,GAChB,OACI,mCACI,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAI,GAAGC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BACf,6BAAKL,EAAMI,QAAQE,OACnB,gCAAQN,EAAMI,QAAQG,cCLzBC,G,MAAW,SAACR,GACrB,OACI,qBAAKC,UAAU,YAAf,SACKD,EAAMS,SAASC,KAAI,SAACN,GAAD,OAChB,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,WCJtBM,G,MAAY,SAACX,GACtB,OACI,uBACIC,UAAU,SACVW,KAAK,SACLC,YAAY,iBACZC,SAAUd,EAAMe,kBC8BbC,E,kDAlCb,aAAe,IAAD,8BACZ,gBAYFC,eAAiB,SAACC,GAChB,EAAKC,SAAS,CACZC,YAAaF,EAAMG,OAAOC,SAb5B,EAAKC,MAAQ,CACXd,SAAU,GACVW,YAAa,IAJH,E,qDAOd,WAAqB,IAAD,OAClBI,MAAM,8CACHC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAAChB,GAAD,OAAc,EAAKU,SAAS,CAAEV,SAAUA,S,oBASlD,WAAU,IAAD,EAC2BmB,KAAKL,MAA/Bd,EADD,EACCA,SAAUW,EADX,EACWA,YACZS,EAAkBpB,EAASqB,QAAO,SAAC1B,GAAD,OACtCA,EAAQE,KAAKyB,cAAcC,SAASZ,EAAYW,kBAElD,OACE,sBAAK9B,UAAU,MAAf,UACE,mDACA,cAAC,EAAD,CAAWc,cAAea,KAAKX,iBAC/B,cAAC,EAAD,CAAUR,SAAUoB,W,GA7BVI,aCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBX,MAAK,YAAkD,IAA/CY,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.164ab247.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\r\n\r\nimport './card.styles.css';\r\n\r\nexport const Card = props => {\r\n    return (\r\n        <>\r\n            <div className=\"card-container\">\r\n                <img alt=\"\" src={`https://robohash.org/${props.monster.id}?set=set3&size=120x120`} />\r\n                <h2>{props.monster.name}</h2>\r\n                <label>{props.monster.email}</label>\r\n            </div>\r\n        </>\r\n    );\r\n}","import React from 'react';\r\nimport { Card } from './card/card.component';\r\n\r\nimport './card-list.styles.css'\r\n\r\nexport const CardList = (props) => {\r\n    return (\r\n        <div className=\"card-list\">\r\n            {props.monsters.map((monster) => (\r\n                <Card key={monster.id} monster={monster} />\r\n            ))}\r\n        </div>\r\n    );\r\n}","import react from \"react\";\r\n\r\n\r\nimport \"./search-box.styles.css\"\r\n\r\nexport const SearchBox = (props) => {\r\n    return (\r\n        <input\r\n            className=\"search\"\r\n            type=\"search\"\r\n            placeholder=\"search monster\"\r\n            onChange={props.onChangeEvent}\r\n        />\r\n    )\r\n}\r\n","import logo from \"./logo.svg\";\r\nimport \"./App.css\";\r\nimport React, { Component } from \"react\";\r\nimport { CardList } from \"./components/card-list/card-list.component\";\r\nimport { SearchBox } from \"./components/search-box/search-box.component\";\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      monsters: [],\r\n      searchField: \"\",\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\r\n      .then((elements) => elements.json())\r\n      .then((monsters) => this.setState({ monsters: monsters }));\r\n  }\r\n\r\n  handleOnChange = (event) => {\r\n    this.setState({\r\n      searchField: event.target.value,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { monsters, searchField } = this.state;\r\n    const filteredMonster = monsters.filter((monster) =>\r\n      monster.name.toLowerCase().includes(searchField.toLowerCase())\r\n    );\r\n    return (\r\n      <div className=\"App\">\r\n        <h1>Monsters Rolodex </h1>\r\n        <SearchBox onChangeEvent={this.handleOnChange} />\r\n        <CardList monsters={filteredMonster} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}